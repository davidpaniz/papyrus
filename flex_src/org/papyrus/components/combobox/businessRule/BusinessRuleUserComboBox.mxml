<?xml version="1.0" encoding="utf-8"?>
<AutoCompleteCombo  xmlns="org.papyrus.components.combobox.*" 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	creationComplete="init();" labelFunction="showI18NLabel">
	<mx:Script >
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.ListEvent;
			
			import org.papyrus.model.User;
			import org.papyrus.model.businessRule.TemplateUser;
			import org.papyrus.screen.businessRules.action.SpecificActionSubForm;
			import org.papyrus.screen.businessRules.action.StatusActionSubForm;
			import org.papyrus.services.UserService;
			
			protected function init():void {
				loadData(null);

			}
			
			private function loadData(param:Object):void {
				if(dataProvider.length <= 0) {
					new UserService(setValues).listAllStaffs();
				}
				
				if(param != null) {
					setTimeout(setSelectedItem, 500, param);
				}
			}
			
			private function setValues(users:ArrayCollection):void {
				dataProvider = new ArrayCollection();			
				
				var currentUser:TemplateUser = TemplateUser.createByEnum("CURRENT_USER");
				var requester:TemplateUser = TemplateUser.createByEnum("REQUESTER");
				var responsable:TemplateUser = TemplateUser.createByEnum("RESPONSABLE");
				
				dataProvider.addItem(currentUser);
				dataProvider.addItem(requester);
				dataProvider.addItem(responsable);
				
				for each (var user:User in users) {
					dataProvider.addItem(TemplateUser.createByUser(user));
				}
			}
			
			public function getSubForm():SpecificActionSubForm {
				return new StatusActionSubForm();
			}
			
			public function showI18NLabel(item:Object):String {
				return TemplateUser(item).getName(resourceManager);
			}
			
			override public function set selectedItem( param:Object ):void
			{
				loadData(param);
				
				super.selectedIndex = 1;
				var count:int = 0;
				for each( var obj:Object in collection )
				{
					if( TemplateUser(obj).getName(resourceManager) == TemplateUser(param).getName(resourceManager))
					{
						selectedIndex = count;
						super.selectedItem = obj;
						dispatchEvent( new ListEvent( ListEvent.CHANGE ) );
						return;
					}
					count++;
				}
				
				// It was not found
				super.selectedIndex = 0;
			}
			
			private function setSelectedItem(obj:Object):void {
				selectedItem = obj;
			}
		]]>
	</mx:Script>
</AutoCompleteCombo>