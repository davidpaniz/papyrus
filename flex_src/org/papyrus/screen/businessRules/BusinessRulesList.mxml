<?xml version="1.0" encoding="utf-8"?>
<mx:ViewStack xmlns:mx="http://www.adobe.com/2006/mxml"
	 xmlns:urgency="org.papyrus.screen.urgency.*" xmlns:enum="org.papyrus.components.combobox.enum.*" 
	 width="100%" height="100%" show="loadData();"
	 xmlns:combobox="org.papyrus.components.combobox.*" xmlns:businessRules="org.papyrus.screen.businessRules.*">
	 	<mx:Script>
		<![CDATA[
	 			import org.papyrus.services.BusinessRuleService;
	 			import mx.events.CollectionEvent;
	 			import mx.events.CloseEvent;
	 			import mx.controls.Alert;
	 			import mx.formatters.DateFormatter;
	 			import org.papyrus.model.BusinessRule;
	 			import org.papyrus.services.ClientService;
	 			import mx.collections.ArrayCollection;
	 			
	 			[Bindable]
				private var businessRuleList:ArrayCollection = new ArrayCollection();
				
				public var openBusinessRuleFunction:Function;
				
				private function loadData():void {
					search();
				}
				
				private function oneMonthAgo():Date {
					var date:Date = new Date();
					date.month = date.month - 1;
					return date;
				}
				
				private function search():void {
					new BusinessRuleService(searchHandler).listBusinessRule();
				}
				
				private function searchHandler(businessRules:ArrayCollection):void {
					businessRuleList = businessRules;
					businessRuleList.filterFunction = filterHandler;
				}
				
				private function filterHandler(item:Object):Boolean {
//					var businessRule:BusinessRule = item as BusinessRule;
//					if(cbStatus.selectedItem != "ALL") {
//						return businessRule.status == cbStatus.selectedItem;
//					}
//					
					return true;
				}
				
				private function updateFilter():void {
					businessRuleList.refresh();
				}
				
				private function disable():void {
					Alert.show("TODO", "TODO" );
				}
				
				private function backToList():void {
					selectedChild = list;
				}
				
				private function editBusinessRule():void {
					new BusinessRuleService(showForm).loadBusinessRule(dg.selectedItem as BusinessRule);
				}
				
				private function showForm(businessRule:BusinessRule):void {
					selectedChild = form;
					form.businessRule = businessRule;
				}
				
				private function saveCallBack():void {
					loadData();
					backToList();	
				}
		]]>
	</mx:Script>

	<mx:VBox id="list" width="100%" >
		<mx:Text text="{resourceManager.getString('businessRule', 'businessRule.my_businessRules')}" />
		<mx:DataGrid id="dg" width="100%" height="100%" dataProvider="{businessRuleList}" >
			<mx:columns>
				<mx:DataGridColumn headerText="{resourceManager.getString('businessRule', 'name')}" dataField="name" />
				<mx:DataGridColumn headerText="{resourceManager.getString('businessRule', 'description')}" dataField="description" />
				<mx:DataGridColumn headerText="{resourceManager.getString('businessRule', 'enabled')}" dataField="enabled" >
					<mx:itemRenderer>
	                    <mx:Component>
	                         <mx:CheckBox selected="{data.enabled}" enabled="false" />            
	                    </mx:Component>                        
					</mx:itemRenderer>
				</mx:DataGridColumn>
			</mx:columns>
		</mx:DataGrid>
		<mx:ControlBar horizontalAlign="center">
			<mx:Button label="{resourceManager.getString('general', 'new')}" click="showForm(null)"/>
			<mx:Button label="{resourceManager.getString('general', 'edit')}" click="editBusinessRule();"/>
		</mx:ControlBar>
	</mx:VBox>
	<businessRules:BusinessRulesForm id="form" width="100%" height="100%" saveHandler="saveCallBack" cancelHandler="backToList" />
</mx:ViewStack>