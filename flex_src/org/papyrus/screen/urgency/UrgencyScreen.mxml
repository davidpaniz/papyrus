<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml"
	 width="488" height="384"  show="getList()">
	 	<mx:Script>
		<![CDATA[
			import org.papyrus.services.Service;
			import org.papyrus.components.notification.NotificatorManager;
			import org.papyrus.services.UrgencyService;
			import org.papyrus.model.Urgency;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.controls.Alert;
			[Bindable]
			private var listUrgencys:ArrayCollection;
			private var urgency:Urgency;
			
			private function save():void
			{
				this.urgency = new Urgency();
				this.urgency.id   = new Number(txtId.text);
				this.urgency.description   = txtDs.text;
				new UrgencyService(onResultSave).saveUrgency(urgency);
			}
			
			private function onResultSave(urgency:Urgency):void
			{
				NotificatorManager.warn(resourceManager.getString('general', 'save_successfully'));
				getList();
			}
			
			private function remove():void
			{
				if (dg.selectedItem != null) {
					urgency = dg.selectedItem as Urgency;
					new UrgencyService(onResultRemove).deleteUrgency(urgency);
				} else {
					Alert.show(resourceManager.getString('general', 'save_successfully'));
				}
			}
			
			private function onResultRemove(urgency:Urgency):void
			{
				NotificatorManager.warn(resourceManager.getString('general', 'save_successfully'));
				getList();
			}
			
			private function getList():void
			{
				hideForm();
				new UrgencyService(onResultGetList).listUrgency();
			}
			
			private function onResultGetList(list:ArrayCollection):void
			{
				listUrgencys = list;
			}
			
			private function setDefault():void
			{
				cleanForm();
				showForm();
			}
			
			private function populateForm():void
			{
				if(dg.selectedItem != null) {
					txtId.text = (dg.selectedItem as Urgency).id.toString();
					txtDs.text = (dg.selectedItem as Urgency).description;
				}
				showForm();
			}
			
			private function showForm():void
			{
				urgencyForm.includeInLayout = true;
				urgencyForm.visible = true;
				txtDs.setFocus();
			}
			
			private function hideForm():void
			{
				urgencyForm.includeInLayout = false;
				urgencyForm.visible = false;
			}
			
			private function cleanForm():void
			{
				txtId.text = "";
				txtDs.text = "";
			}
		]]>
	</mx:Script>
	<mx:Resize id="resize" />
	<mx:VBox width="100%" resizeEffect="{resize}">
		<mx:Text text="{resourceManager.getString('urgency', 'urgency.managemant')}" />
		<mx:DataGrid id="dg" width="100%" height="100%" dataProvider="{listUrgencys}" click="showForm();">
			<mx:columns>
				<mx:DataGridColumn headerText="ID" dataField="id" width="30"/>
				<mx:DataGridColumn headerText="Urgency" dataField="description"/>
			</mx:columns>
		</mx:DataGrid>
		<mx:ControlBar horizontalAlign="center">
			<mx:Button label="{resourceManager.getString('general', 'new')}" click="setDefault()"/>
		</mx:ControlBar>
	</mx:VBox>
	<mx:Form id="urgencyForm" width="100%" height="100%" defaultButton="{btSalvar}" includeInLayout="false" visible="false" creationPolicy="all">
		<mx:FormHeading label="{resourceManager.getString('general', 'urgency')}" width="100%"/>
		<mx:FormItem label="ID:" width="127">
			<mx:TextInput width="100%" id="txtId"
				text="{Urgency(dg.selectedItem).id}" editable="false" enabled="false"/>
		</mx:FormItem>
		<mx:FormItem label="{resourceManager.getString('general', 'urgency')}:" width="345">
			<mx:TextInput width="100%" id="txtDs"
				text="{Urgency(dg.selectedItem).description}"/>
		</mx:FormItem>
		<mx:ControlBar horizontalAlign="center">
			<mx:Button label="{resourceManager.getString('general', 'delete')}" click="remove()"/>
			<mx:Button label="{resourceManager.getString('general', 'cancel')}" click="hideForm()"/>
			<mx:Button label="{resourceManager.getString('general', 'save')}" id="btSalvar" click="save()"
				textAlign="center"/>
		</mx:ControlBar>
	</mx:Form>

</mx:HBox>